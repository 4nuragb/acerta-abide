!obj:pylearn2.train.Train {

    dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
        path: '%(data_source)s',
        expect_headers: False,
        expect_labels: True,
        start: %(data_train_start)s,
        stop: %(data_train_stop)s,
    },

    model: !obj:pylearn2.models.mlp.MLP {
        batch_size: %(layer_batch)s,
        nvis: 17955,
        layers: [
            !obj:pylearn2.models.mlp.PretrainedLayer {
                layer_name: 'h1',
                layer_content: !pkl: '%(layer_1)s',
            },
            !obj:pylearn2.models.mlp.PretrainedLayer {
                layer_name: 'h2',
                layer_content: !pkl: '%(layer_2)s',
            },
            !obj:pylearn2.models.mlp.Softmax {
                max_col_norm: 1.9365,
                layer_name: 'y',
                n_classes: 2,
                irange: .005,
            },
        ],
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: .05,
        learning_rule: !obj:pylearn2.training_algorithms.learning_rule.Momentum {
            init_momentum: .5,
        },
        monitor_iteration_mode: even_sequential,
        monitoring_dataset: {
            'valid': !obj:pylearn2.datasets.csv_dataset.CSVDataset {
                path: '%(data_source)s',
                expect_headers: False,
                expect_labels: True,
                start: %(data_valid_start)s,
                stop: %(data_valid_stop)s,
            },
        },
        cost: !obj:pylearn2.costs.mlp.Default {},
        termination_criterion: !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "valid_y_misclass",
                    prop_decrease: 0.,
                    N: 100
                },
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: %(layer_max_epochs)s
                },
            ],
        },
        update_callbacks: !obj:pylearn2.training_algorithms.sgd.ExponentialDecay {
            decay_factor: 1.00004,
            min_lr: .000001,
        },
    },
    extensions: [
        !obj:pylearn2.training_algorithms.learning_rule.MomentumAdjustor {
            start: 1,
            saturate: 250,
            final_momentum: .7,
        },
        !obj:pylearn2.train_extensions.best_params.MonitorBasedSaveBest {
             channel_name: 'valid_y_misclass',
             save_path: "%(save_path)s",
        },
    ],

}
