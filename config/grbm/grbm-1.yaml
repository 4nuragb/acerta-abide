!obj:pylearn2.train.Train {

    dataset: &train !obj:csv_dataset.CSVDataset {
        path: "{data_source}",
        expect_headers: False,
        expect_labels: True,
        start: {data_train_start},
        stop: {data_train_stop},
    },

    model: !obj:pylearn2.models.rbm.GaussianBinaryRBM {
        nvis: {layer_in},
        nhid: {layer_out},
        irange: 0.05,
        energy_function_class: !obj:pylearn2.energy_functions.rbm_energy.grbm_type_1 {},
        learn_sigma: True,
        init_sigma: .4,
        init_bias_hid: -0.2,
        mean_vis: False,
        sigma_lr_scale: 1e-3,
    },

    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate: 1e-2,
        batch_size: {layer_batch},
        monitoring_batches: 20,
        monitoring_dataset: {
            "train": *train,
            "valid": !obj:csv_dataset.CSVDataset {
                path: "{data_source}",
                expect_headers: False,
                expect_labels: True,
                start: {data_valid_start},
                stop: {data_valid_stop},
            },
            "test": !obj:csv_dataset.CSVDataset {
                path: "{test_data_source}",
                expect_headers: False,
                expect_labels: True,
                start: 0,
                stop: 100,
            },
        },
        cost: !obj:pylearn2.costs.ebm_estimation.SMD {
            corruptor: !obj:pylearn2.corruption.GaussianCorruptor {
                stdev: {corruption},
            },
        },
        termination_criterion: !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: {layer_max_epochs},
        },
    },

    extensions: [
        !obj:best_params.MonitorBasedSaveBest {
             channel_name: "valid_objective",
             save_path: "{save_path}",
        },
        !obj:csv_monitoring.CSVMonitoring {
            name: "{namespace}.{step}.cv_{fold}",
            file: {log_file},
        },
    ],

}